buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name = "IGW"
        url = "http://maven.k-4u.nl/"
    }
}

apply plugin: 'forge'


version = "1.0"
group= "com.trade12.Archangel" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Archangel"

project.ext {
    buildNum = System.getenv("BUILD_NUMBER")
    mcVersion = "1.7.10"
}


minecraft {
    version = "${project.ext.mcVersion}-10.13.0.1187"

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version
    replace '@BUILD_NUMBER@', project.ext.buildNum

    assetDir = "eclipse/assets"
}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'java'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
    api {
        java {
            srcDir 'api'
        }
    }

}


dependencies {
    def f = new File('lib/')
    if (f.exists()) {
        f.delete()
    }
    f.mkdirs()
    if (!f.exists()) {
        f.mkdir()
    }
    println("  Adding dependencies!")
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.103:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.2.9:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.2.15:dev"
    compile "mcp.mobius.waila:Waila:1.5.3_1.7.10"
    compile "igwmod:IGW-Mod-1.7.10:1.1.0-12:userdev"

    println("  Finished adding dependencies!")
}



processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "buildNum", project.ext.buildNum
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'buildNum':project.ext.buildNum
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    //This makes sure that it gets run EVERY time
    outputs.upToDateWhen {false}
}

jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "${project.ext.buildNum}"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        appendix = "${project.ext.mcVersion}"
        classifier = "${project.ext.buildNum}-deobf"
    }
}
